查詢自己在哪個目錄
pwd

控制目錄
cd ls

將目錄初始化，變成git Repo
git init

將 Readme.txt 加入版本管理
$ git add Readme.txt
將目前所在的資料夾裡 "所有的檔案" "的改變" 強制 加入版本管理
git add -f --all
  
git add 並不會直接寫入git 的記錄檔，而是會被另外記錄起來
git commit 後才會一次執行寫入所有的指令
git commit -m "<你想說的話>"

git config --global user.email "yoyohobc@gmail.com"。
git config --global user.name "yoyohobc"

增加 github repository 遠端路徑
git remote add origin https://github.com/yoyohobc/BMWService.git
git remote set-url origin https://github.com/yoyohobc/108_PC_usercenter

將本地同步至遠端(master=自己的<branch>)
git add -f --all
git commit -m "yoyohobc"
git push -u origin master

建立一個名為 dev 的 branch
git checkout -b dev
 
將遠端同步至本地
git pull origin master

fatal: refusing to merge unrelated histories
 從 git 2.9.0 開始預設行為不允許合併沒有共同祖先的分支。
你需要加上 --allow-unrelated-histories 選項才不會出現這個錯誤訊息。
git pull origin master --allow-unrelated-histories

// 移動到 master branch
$ git checout master
// 合併 dev 到 master
$ git merge dev
// 刪除 dev branch
$ git branch -d dev
// 將合併後的 master 推送到遠端
$ git push origin master


error: failed to push some refs to
第一招：先拉再推
git pull --rebase
--rebase 參數是表示「內容抓下來之後請使用 Rebase 方式合併」
第二招：無視規則，總之就是聽我的！
git push -f


那怎么stash本地的更新呢？直接执行：
git stash
git pull
git stash pop

备份当前的工作区，从最近一次提交中读取相关内容，
让工作区保持和上一次提交的内容一致。同时，将工作区的内容保存到git栈中。
git stash
从git栈中读取最近一次保存的内容，恢复工作区的相关内容。
由于可能存在多个stash的内容，所以用栈来管理，
pop会从最近一个stash中读取内容并恢复到工作区。
git stash pop


放弃本地的修改，直接覆盖
git reset --hard
git pull origin master


如果你之前没有提交过文件,
而你在git push的时候出现Everything up-to-date,
并且文件也没有提交上去.
可能是因为你没有git add 和 git commit.
需要重新执行